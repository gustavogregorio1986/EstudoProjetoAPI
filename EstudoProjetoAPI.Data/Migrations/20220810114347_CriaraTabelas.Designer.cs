// <auto-generated />
using System;
using EstudoProjetoAPI.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstudoProjetoAPI.Data.Migrations
{
    [DbContext(typeof(EstudoProjetoAPIContexto))]
    [Migration("20220810114347_CriaraTabelas")]
    partial class CriaraTabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Administrador", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Login")
                        .HasColumnType("int");

                    b.Property<string>("NomeAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdmin");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_Administrador");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cmmplemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Endereco");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Login", b =>
                {
                    b.Property<int>("IdLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLogin");

                    b.ToTable("tb_Login");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Ocorrencia", b =>
                {
                    b.Property<int>("IdOcorrencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Processo")
                        .HasColumnType("int");

                    b.Property<int>("NumeroOcorrencia")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessoIdProcesso")
                        .HasColumnType("int");

                    b.HasKey("IdOcorrencia");

                    b.HasIndex("ProcessoIdProcesso");

                    b.ToTable("tb_Ocorrencia");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Ocorrencia")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("QtdePagamento")
                        .HasColumnType("int");

                    b.HasKey("IdPagamento");

                    b.HasIndex("Id_Ocorrencia");

                    b.ToTable("tb_Pagamento");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Processo", b =>
                {
                    b.Property<int>("IdProcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeProcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroProcesso")
                        .HasColumnType("int");

                    b.HasKey("IdProcesso");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Processo");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Login")
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_Usuario");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Administrador", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Login", "Login")
                        .WithMany()
                        .HasForeignKey("Id_Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Endereco", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Ocorrencia", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Processo", "Processo")
                        .WithMany()
                        .HasForeignKey("ProcessoIdProcesso");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Pagamento", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Ocorrencia", "Ocorrencia")
                        .WithMany()
                        .HasForeignKey("Id_Ocorrencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Processo", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EstudoProjetoAPI.Dominio.Entidade.Usuario", b =>
                {
                    b.HasOne("EstudoProjetoAPI.Dominio.Entidade.Login", "Login")
                        .WithMany()
                        .HasForeignKey("Id_Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Login");
                });
#pragma warning restore 612, 618
        }
    }
}
